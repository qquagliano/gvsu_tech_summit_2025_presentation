---
# Bibliography opts
bibliography: "./refs/complete.bib"
nocite: "@*" # Cites all items present in bibliography
cite-method: citeproc
citeproc: true
csl: "../resources/bibs/apa.csl"
link-citations: true
link-bibliography: true
---
```{r}
#| lst-label: lst-r-libraries
#| lst-cap: "R libraries"

base::library(package = knitr) # For rendering document
base::library(package = quarto) # For rendering document

# Write all package citations to bib file for citation
knitr::write_bib(
  x    = base::.packages(),
  file = "./refs/r_packages.bib"
)
```

```{bash}
#| context: setup
#| lst-label: lst-citing
#| lst-cap: "Bibliography and citations"

# Check if a complete bib file already exists
if [ -f ./refs/complete.bib ]; then
  rm ./refs/complete.bib
fi

# Make an empty bib file
touch ./refs/complete.bib

# Append R package citation to bib file
if [ -f ./refs/r_packages.bib ]; then
  cat ./refs/r_packages.bib >>./refs/complete.bib
fi

# Add any additional citations to bib file
if [ -f ./refs/lit_review.bib ]; then
  cat ./refs/lit_review.bib >>./refs/complete.bib
fi
```

{{< pagebreak >}}

# Introduction {#sec-intro}

## Follow Along {#sec-follow-along}

- See the link to presentation handout on Tech Summit Website!: [www4.gvsu.edu/gvtechsummit](www4.gvsu.edu/gvtechsummit)

## Disclosures and Disclaimers {#sec-disclosures}

- I have no disclosures or conflicts-of-interests related to this presentation

- I am not a software engineer, computer scientist, or other technology-oriented
professional by training - but am an enthusiast and hobbyist

## Learning Objectives {#sec-learning-objs}

- Appreciate *why* we should pay attention to how software is published and
priced (Sections: [Motivation] and [Purpose])

- Understand the vocabulary used to describe pricing models and source code
availability in software (Section: [Vocabulary of Software Availability and
Pricing])

- Appreciate both the advantages and disadvantages of adopting open-source
alternatives into instruction (Section: [Advantages and Challenges])

- Consider the ways in which exposure to different tools and methods produces
more technology-literate students (Section: [Connection to Tech Literacy])

- Learn about some methods to bring more diverse software to students (Section:
[Examples of Integration])

## Motivation {#sec-motivation}

- The four (hyperbolic) "Evil" Es of software
  - Software is everywhere - it's always all around us
  - Software is essential - it's a common requirement of navigating the world
  - Software is elaborate - but it doesn't look it!
  - Software is expensive - and keeps getting more so!

- I want my students able to navigate these "Evil Es" during and after college,
and not feel lost

## Purpose {#sec-purpose}

- Follow the liberal arts mission of creating well-(tech)-rounded students
  - Expose students to more alternative tools
  - Help students see the similarities, differences, and quirks of each tool
  - Ensure that when students encounter new software they can adapt easier

- Support projects and software that are free in a time of increasing prices
  - Push back against reliance upon subscription-based tools
  - Show students how to build their portfolio and skill set without incurring
  additional financial burden

- This is **not** an attempt to insist upon **only** using open-source software

# Vocabulary of Software Availability and Pricing {#sec-avail}

{{< important "There's a lot of different ways to describe software price models,
so be discerning when looking at options!" >}}

# Examples of Integration {#sec-examples-of-integration}

{{< important "There are several routes to integration of open-source tools, but
all focus on flexibility and agency!" >}}

# Connection to Tech Literacy {#sec-conn-tech-lit}

{{< important "There are several routes to integration of open-source tools, but
all focus on flexibility and agency!" >}}

# Advantages and Challenges {#sec-adv}

{{< important "Introducing open-source tools brings benefits and drawbacks, but
the good outweighs the bad!" >}}

{{< pagebreak >}}

## References {#sec-refs}

::: {#refs}
:::
